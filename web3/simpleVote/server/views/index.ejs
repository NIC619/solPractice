<% layout('layout_html') -%>
<h1>Simple Voting Application</h1>
<div class="table-responsive">
  <table class="table table-bordered">
    <thead>
      <tr>
        <th>Candidate</th>
        <th>Votes</th>
        <th></th>
      </tr>
    </thead>
    <tbody>
    <% for( var i = 0 ; i < voteCountList.length ; i++ ) { %>
      <tr>
        <td><%= candidateNameList[i] %></td>
        <td id="candidate-<%= i %>"><%= voteCountList[i] %></td>
        <td>
            <!-- <input type="number"/> -->
            <a href="#" onclick="vote(<%= i %>)" class="btn btn-primary">Vote</a>
        </td>
      </tr>
    <% } %>
    </tbody>
  </table>
</div>
<% if(voteCountList.length == 0) { %>
    <a href="/deploy" class="btn btn-primary">Deploy</a>
<% } %>
<br><h3><font color="red"><%= debugMsg %></font></h3>
<script src="https://cdn.rawgit.com/ethereum/web3.js/develop/dist/web3.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script>
    // web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
    // abi = JSON.parse('[{"constant":false,"inputs":[{"name":"candidate","type":"bytes32"}],"name":"totalVotesFor","outputs":[{"name":"","type":"uint8"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"candidate","type":"bytes32"}],"name":"validCandidate","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"votesReceived","outputs":[{"name":"","type":"uint8"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"x","type":"bytes32"}],"name":"bytes32ToString","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"candidateList","outputs":[{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"candidate","type":"bytes32"}],"name":"voteForCandidate","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"contractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"inputs":[{"name":"candidateNames","type":"bytes32[]"}],"payable":false,"type":"constructor"}]')
    // VotingContract = web3.eth.contract(abi);
    // // In your nodejs console, execute contractInstance.address to get the address at which the contract is deployed and change the line below to use your deployed address
    // contractInstance = VotingContract.at('0x2a9c1d265d06d47e8f7b00ffa987c9185aecf672');
    // candidates = {"Rama": "candidate-1", "Nick": "candidate-2", "Jose": "candidate-3"}

    function vote(candidateNumber) {
        $.ajax({
            type:   'POST',
            url:    '/vote',
            data:   {"candidateNumber": candidateNumber},
            success: function (res) {
                console.log(res);
                $("#candidate-" + candidateNumber).html(res);
            }
        });
    }

    // $(document).ready(function() {
    // candidateNames = Object.keys(candidates);
    // for (var i = 0; i < candidateNames.length; i++) {
    //     let name = candidateNames[i];
    //     let val = contractInstance.totalVotesFor.call(name).toString()
    //     $("#" + candidates[name]).html(val);
    // }
    // });
</script>